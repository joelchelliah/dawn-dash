@use '../../../../styles/index' as *;

$checkbox-size: 1rem;
$checkmark-size: 0.625rem;

.checkbox-label {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  width: calc(33.33% - 0.5rem);
  min-width: 80px;
  margin-bottom: 0.5rem;
  cursor: pointer;

  &--card-set {
    @media (max-width: $breakpoint-mobile) {
      width: calc(50% - 0.5rem);
      min-width: 0;
    }
  }

  &--rarity {
    display: flex;
    align-items: center;
    min-width: 20px;
    gap: 0.25rem;
    width: calc(50% - 0.5rem);
    margin-right: 0;
  }

  &--banner {
    gap: 0.25rem;
    margin: 0.125rem 0;
    padding: 0.3125rem 0.25rem;

    // Apply rain texture and color based on banner name
    @each $name, $color in $banner-name-to-color-map {
      &--#{$name} {
        // Check if the banner name is even or odd
        @if index(map-keys($banner-name-to-color-map), $name) % 2 == 0 {
          // Only apply texture when checked
          &[data-checked='true'] {
            @include rainTexture(rgba($color, 0.75), true);
          }
          // Always apply texture on hover
          &:hover {
            @include rainTexture($color, true);
          }
        } @else {
          &[data-checked='true'] {
            @include rainTexture(rgba($color, 0.75), false);
          }
          &:hover {
            @include rainTexture($color, false);
          }
        }
      }
    }
  }

  &--extra {
    width: 100%;
    margin-bottom: 0.5rem;
  }

  &--formatting {
    width: calc(50% - 1.5rem);

    @media (max-width: $breakpoint-mobile) {
      width: 100%;
    }
  }

  &:hover {
    .checkbox-label-text {
      color: $color-primary-hover;
      opacity: 0.65;
    }
  }
}

.checkbox-label-text {
  margin-left: 0.25rem;
  color: $color-primary-base;
  opacity: 0.5;

  &--checked {
    opacity: 1 !important;
  }
}

.checkbox {
  width: $checkbox-size;
  height: $checkbox-size;
  appearance: none;
  -webkit-appearance: none;
  background-color: $color-primary-base;
  margin: 0;
  border: 1px solid $color-component-border-dark;
  border-radius: 0.125rem;
  display: grid;
  place-content: center;
  cursor: pointer;
  transition: background-color 150ms cubic-bezier(0.77, 0, 0.175, 1);

  &::before {
    content: '';
    width: $checkmark-size;
    height: $checkmark-size;
    transform: scale(0) rotate(-45deg);
    transition: 350ms transform cubic-bezier(0.77, 0, 0.175, 1);
    box-shadow: inset 1rem 1rem #fff;
    transform-origin: center;
    clip-path: polygon(10% 40%, 0 55%, 50% 100%, 100% 5%, 90% 0%, 40% 60%);
  }

  &:checked {
    background-color: rgba($color-primary-base, 0.125);
    border-top-color: rgba($color-primary-base, 0.5);
    border-left-color: rgba($color-primary-base, 0.5);
    border-bottom-color: rgba($color-primary-ultimate-despair, 0.85);
    border-right-color: rgba($color-primary-ultimate-despair, 0.85);
    border-bottom-width: 2px;
    border-right-width: 2px;

    &::before {
      transform: scale(1.05) rotate(5deg) translate(-0.0625rem, -0.0625rem);
    }
  }

  &--extra {
    &:checked {
      background-color: darken($color-danger-base, 25%);
    }
  }
}
